# Kompass Compute Helm Chart

This chart deploys the Kompass Compute components.

## Prerequisites

*   Kubernetes 1.19+
*   Helm 3.2.0+
*   Kompass Insight Agent installed in the cluster
*   kompass-compute [terraform module](https://github.com/zesty-co/terraform-kompass-compute) installed
*   Pod Identity enabled in the cluster, otherwise go to the [IRSA section](#using-iam-roles-for-service-accounts-irsa)

## Installing the Chart

To install the chart with the release name `kompass-compute`:

```bash
helm repo add zesty-kompass-compute https://zesty-co.github.io/kompass-compute
helm repo update
helm install kompass-compute zesty-kompass-compute/kompass-compute --namespace zesty-system
```
> **Note**: To enable spot protection you need to provide the SQS queue URL in values.yaml.

<br>

## Advanced Configuration

### Configuring ECR Pull-Through Cache

Caching the images on all Hibernated nodes can increase network costs.

To reduce network costs, it's recommended to configure an ECR Pull-Through Cache and configure the nodes to pull images through it, thus only downloading each image from the internet once.

First create the ECR Pull-Through Cache rules for the desired container registries, and then configure Kompass Compute to use them by confuguring values.yaml as follows:

```yaml
cachePullMappings:
  dockerhub:
    - proxyAddress: "<ACCOUNT_ID>.dkr.ecr.<REGION>.amazonaws.com/<DOCKER_PROXY_NAME>"
  ghcr:
    - proxyAddress: "<ACCOUNT_ID>.dkr.ecr.<REGION>.amazonaws.com/<GHCR_PROXY_NAME>"
  # Add other registries as needed, e.g., ecr, k8s, quay
```

Additionally, since downloading from ECR is performed though S3, you should have an S3 VPC endpoint configured in your cluster and Kompass Compute should be configured to access it.
Add the following to values.yaml:

```yaml
qubexConfig:
  infraConfig:
    aws:
      s3VpcEndpointID: "vpce-..."
```

### Configure spot interruption monitoring

Kompass Compute monitors spot interruptions through an SQS queue that was created by the [Kompass Compute Terraform module](https://github.com/zesty-co/terraform-kompass-compute).

To connect it to the Kubernetes components, add the following to values.yaml:

```yaml
qubexConfig:
  infraConfig:
    aws:
      spotFailuresQueueUrl: "https://sqs.<REGION>.amazonaws.com/<ACCOUNT_ID>/<QUEUE_NAME>"
```

These values are typically obtained from the output of the [Kompass Compute Terraform module](https://github.com/zesty-co/terraform-kompass-compute).

### Using IAM Roles for Service Accounts (IRSA)

It's recomended to use EKS Pod Identity instead of IRSA, but if you perfer IRSA, you can configure it as follows:

First make sure that you have created the necasary IAM roles and policies.

These are created through the [Kompass Compute Terraform module](https://github.com/zesty-co/terraform-kompass-compute) by specifying `enable_irsa = true` and `irsa_oidc_provider_arn=<OIDC_PROVIDER_ARN>`.

Then make sure that all controllers are configured to use IRSA by adding the following to values.yaml:

```yaml
# Ensure serviceAccount.create is true for each component if the chart manages them,
# or false if you manage them externally but still want to set annotations via Helm.

hiberscaler:
  serviceAccount:
    # create: true # Default is true
    annotations:
      "eks.amazonaws.com/role-arn": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>"

imageSizeCalculator:
  serviceAccount:
    # create: true # Default is true
    annotations:
      "eks.amazonaws.com/role-arn": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>"

snapshooter:
  serviceAccount:
    # create: true # Default is true
    annotations:
      "eks.amazonaws.com/role-arn": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>"

telemetryManager:
  serviceAccount:
    # create: true # Default is true
    annotations:
      "eks.amazonaws.com/role-arn": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>"

# If EKS Pod Identity is enabled in your cluster and you want to disable it for these pods
# (preferring IRSA), ensure no pod identity related labels/annotations are set by default,
# or override them if the chart provides such options.
```

The IAM roles and policies should be created beforehand, for example, using the [Kompass Compute Terraform module](https://github.com/zesty-co/terraform-kompass-compute) with `enable_irsa = true`.

{{ template "chart.valuesSection" . }}