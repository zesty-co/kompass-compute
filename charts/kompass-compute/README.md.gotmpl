# Kompass Compute Helm Chart

This chart deploys the Kompass Compute components.

## Prerequisites

-   Kubernetes v1.19, or later
-   Helm v3.2.0, or later
-   Kompass Insight agent installed in the cluster
-   kompass-compute [terraform module](https://github.com/zesty-co/terraform-kompass-compute) installed
-   Pod Identity enabled in the cluster (alternatively, see [Use IAM Roles for Service Accounts (IRSA)](#use-iam-roles-for-service-accounts-irsa))

## Install the chart

The following example shows how to install the chart with the release name, `kompass-compute`:

```bash
helm repo add zesty-kompass-compute https://zesty-co.github.io/kompass-compute
helm repo update
helm install kompass-compute zesty-kompass-compute/kompass-compute --namespace zesty-system
```

>   **Note**: To enable Spot protection, you must provide the SQS queue URL in **values.yaml**.

## Advanced configuration

This section describes the following advanced configuration options:

-   [ECR pull through cache](#ecr-pull-through-cache)
-   [Spot interruption monitoring](#spot-interruption-monitoring)
-   [Use IAM Roles for Service Accounts (IRSA)](#use-iam-roles-for-service-accounts-irsa)

### ECR pull through cache

Caching the images on all hibernated nodes can increase network costs.

To reduce network costs, it is recommended to configure an ECR pull through cache and configure the nodes to pull images through it, thus only downloading each image from the internet once.

**To configure ECR pull through cache:**

1.  Create the ECR pull through cache rules for the desired container registries.
2.  Configure Kompass Compute to use those rules by configuring **values.yaml** as follows:

```yaml
cachePullMappings:
  dockerhub:
    - proxyAddress: "<ACCOUNT_ID>.dkr.ecr.<REGION>.amazonaws.com/<DOCKER_PROXY_NAME>"
  ghcr:
    - proxyAddress: "<ACCOUNT_ID>.dkr.ecr.<REGION>.amazonaws.com/<GHCR_PROXY_NAME>"
  # Add other registries as needed, e.g., ecr, k8s, quay
```

1.  To enable downloading from ECR through S3, configure an S3 VPC endpoint in your cluster. Enable Kompass Compute to access it by adding the following to values.yaml:

```yaml
qubexConfig:
  infraConfig:
    aws:
      s3VpcEndpointID: "vpce-..."
```

### Spot interruption monitoring

Kompass Compute monitors Spot interruptions through an SQS queue that was created by the [Kompass Compute Terraform module](https://github.com/zesty-co/terraform-kompass-compute).

**To configure Spot interruption monitoring:**

-   To connect the queue to the Kubernetes components, add the following to values.yaml:

```yaml
qubexConfig:
  infraConfig:
    aws:
      spotFailuresQueueUrl: "https://sqs.<REGION>.amazonaws.com/<ACCOUNT_ID>/<QUEUE_NAME>"
```

These values are typically obtained from the output of the [Kompass Compute Terraform module](https://github.com/zesty-co/terraform-kompass-compute).

### Use IAM Roles for Service Accounts (IRSA)

It's recommended to use EKS Pod Identity. If you must use IRSA, you need to configure it.

**To configure IRSA:**

1.  Create the necessary IAM roles and policies.  
    Use the [Kompass Compute Terraform module](https://github.com/zesty-co/terraform-kompass-compute) by specifying `enable_irsa = true` and `irsa_oidc_provider_arn=<OIDC_PROVIDER_ARN>`.
2.  Ensure that all controllers are configured to use IRSA by adding the following to values.yaml:

```yaml
# Ensure serviceAccount.create is true for each component if the chart manages them,
# or false if you manage them externally but still want to set annotations via Helm.

hiberscaler:
  serviceAccount:
    # create: true # Default is true
    annotations:
      "eks.amazonaws.com/role-arn": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>"

imageSizeCalculator:
  serviceAccount:
    # create: true # Default is true
    annotations:
      "eks.amazonaws.com/role-arn": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>"

snapshooter:
  serviceAccount:
    # create: true # Default is true
    annotations:
      "eks.amazonaws.com/role-arn": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>"

telemetryManager:
  serviceAccount:
    # create: true # Default is true
    annotations:
      "eks.amazonaws.com/role-arn": "arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>"

# If EKS Pod Identity is enabled in your cluster and you want to disable it for these pods
# (preferring IRSA), ensure no pod identity related labels/annotations are set by default,
# or override them if the chart provides such options.
```

The IAM roles and policies should be created beforehand, for example, using the [Kompass Compute Terraform module](https://github.com/zesty-co/terraform-kompass-compute) with `enable_irsa = true`.

{{ template "chart.valuesSection" . }}